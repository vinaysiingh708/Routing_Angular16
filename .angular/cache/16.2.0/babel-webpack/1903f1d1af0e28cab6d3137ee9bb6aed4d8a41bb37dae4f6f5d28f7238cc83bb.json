{"ast":null,"code":"var _class;\nimport { inject } from \"@angular/core\";\nimport { UserService } from \"./user.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isLogged = false;\n    this.userService = inject(UserService);\n    this.activateRoute = ActivatedRoute = inject();\n  }\n  login(username, password) {\n    let user = this.userService.users.find(u => u.username === username && u.password === password);\n    if (user === undefined) this.isLogged = false;else this.isLogged = true;\n    return user;\n  }\n  logout() {\n    this.isLogged = false;\n  }\n  IsAuthenticated() {\n    this.isLogged = false;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","UserService","ActivatedRoute","AuthService","constructor","isLogged","userService","activateRoute","login","username","password","user","users","find","u","undefined","logout","IsAuthenticated","factory","ɵfac","providedIn"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\10-angular-router\\start\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { UserService } from \"./user.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n    isLogged: Boolean = false;\r\n    userService: UserService =inject(UserService);\r\n    activateRoute = ActivatedRoute = inject()\r\n\r\n    login(username:string, password:string){\r\n      let user = this.userService.users.find((u)=> u.username === username && u.password === password);\r\n\r\n      if(user === undefined)\r\n        this.isLogged =false;\r\n      else\r\n      this.isLogged = true;\r\n    return user;\r\n    }\r\n\r\n    logout(){\r\n        this.isLogged = false;\r\n    }\r\n\r\n    IsAuthenticated(){\r\n        this.isLogged = false;\r\n    }\r\n\r\n}"],"mappings":";AAAA,SAASA,MAAM,QAAoB,eAAe;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,QAAQ,iBAAiB;;AAKhD,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAII,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,WAAW,GAAeN,MAAM,CAACC,WAAW,CAAC;IAC7C,KAAAM,aAAa,GAAGL,cAAc,GAAGF,MAAM,EAAE;;EAEzCQ,KAAKA,CAACC,QAAe,EAAEC,QAAe;IACpC,IAAIC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAIA,CAAC,CAACL,QAAQ,KAAKA,QAAQ,IAAIK,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,CAAC;IAEhG,IAAGC,IAAI,KAAKI,SAAS,EACnB,IAAI,CAACV,QAAQ,GAAE,KAAK,CAAC,KAEvB,IAAI,CAACA,QAAQ,GAAG,IAAI;IACtB,OAAOM,IAAI;EACX;EAEAK,MAAMA,CAAA;IACF,IAAI,CAACX,QAAQ,GAAG,KAAK;EACzB;EAEAY,eAAeA,CAAA;IACX,IAAI,CAACZ,QAAQ,GAAG,KAAK;EACzB;;SArBSF,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAe,OAAA,EAAXf,MAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}