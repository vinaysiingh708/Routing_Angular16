{"ast":null,"code":"var _class;\nimport { inject } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nexport class AuthGuardService {\n  constructor() {\n    this.authService = inject(AuthService);\n    this.router = inject();\n  }\n  canActivate(route, state) {\n    if (this.authService.IsAuthenticated()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n_class = AuthGuardService;\n_class.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","AuthService","AuthGuardService","constructor","authService","router","canActivate","route","state","IsAuthenticated","factory","ɵfac","providedIn"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\10-angular-router\\start\\src\\app\\Services\\authguard.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate{\r\n\r\n    authService: AuthService = inject(AuthService);\r\n    router: Router = inject()\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n        boolean | Observable<boolean> | Promise<boolean>\r\n    {\r\n        if(this.authService.IsAuthenticated()){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"],"mappings":";AAAA,SAASA,MAAM,QAAoB,eAAe;AAGlD,SAASC,WAAW,QAAQ,gBAAgB;;AAK5C,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAKI,KAAAC,WAAW,GAAgBJ,MAAM,CAACC,WAAW,CAAC;IAC9C,KAAAI,MAAM,GAAWL,MAAM,EAAE;;EAEzBM,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IAGjE,IAAG,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAC;MAClC,OAAO,IAAI;KACd,MAAI;MACD,OAAO,KAAK;;EAEpB;;SAbSP,gBAAgB;;mBAAhBA,MAAgB;AAAA;;SAAhBA,MAAgB;EAAAQ,OAAA,EAAhBR,MAAgB,CAAAS,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}