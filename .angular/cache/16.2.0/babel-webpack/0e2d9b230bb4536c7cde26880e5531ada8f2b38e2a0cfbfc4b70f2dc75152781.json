{"ast":null,"code":"var _class;\nimport { inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nexport class AuthGuardService {\n  constructor() {\n    this.authService = inject(AuthService);\n    this.router = inject(Router);\n  }\n  canActivate(route, state) {\n    if (this.authService.IsAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/Login']);\n      return false;\n    }\n  }\n  canActivateChild(childRoute, state) {\n    return this.canActivate(childRoute, state);\n  }\n  canDeactivate(component, currentRoute, currentState, nextState) {\n    return fl;\n  }\n}\n_class = AuthGuardService;\n_class.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","Router","AuthService","AuthGuardService","constructor","authService","router","canActivate","route","state","IsAuthenticated","navigate","canActivateChild","childRoute","canDeactivate","component","currentRoute","currentState","nextState","fl","factory","ɵfac","providedIn"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\10-angular-router\\start\\src\\app\\Services\\authguard.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanDeactivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { ContactComponent } from \"../contact/contact.component\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate, CanActivateChild,CanDeactivate<ContactComponent> {\r\n    \r\n\r\n    authService: AuthService = inject(AuthService);\r\n    router: Router = inject(Router);\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n        boolean | Observable<boolean> | Promise<boolean>\r\n    {\r\n        if(this.authService.IsAuthenticated()){\r\n            return true;\r\n        }else{\r\n            this.router.navigate(['/Login']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot)\r\n    {\r\n      return this.canActivate(childRoute,state)  \r\n    }\r\n\r\n    canDeactivate(component: ContactComponent, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState: \r\n                             RouterStateSnapshot)\r\n    {\r\n        return fl;\r\n    }\r\n\r\n}"],"mappings":";AAAA,SAASA,MAAM,QAAoB,eAAe;AAClD,SAA+EC,MAAM,QAAsC,iBAAiB;AAE5I,SAASC,WAAW,QAAQ,gBAAgB;;AAM5C,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAMI,KAAAC,WAAW,GAAgBL,MAAM,CAACE,WAAW,CAAC;IAC9C,KAAAI,MAAM,GAAWN,MAAM,CAACC,MAAM,CAAC;;EAE/BM,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IAGjE,IAAG,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAC;MAClC,OAAO,IAAI;KACd,MAAI;MACD,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEpB;EAEAC,gBAAgBA,CAACC,UAAkC,EAAEJ,KAA0B;IAE7E,OAAO,IAAI,CAACF,WAAW,CAACM,UAAU,EAACJ,KAAK,CAAC;EAC3C;EAEAK,aAAaA,CAACC,SAA2B,EAAEC,YAAoC,EAAEC,YAAiC,EAAEC,SACxE;IAExC,OAAOC,EAAE;EACb;;SA1BShB,gBAAgB;;mBAAhBA,MAAgB;AAAA;;SAAhBA,MAAgB;EAAAiB,OAAA,EAAhBjB,MAAgB,CAAAkB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}